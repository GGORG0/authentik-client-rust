/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.10.4
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UserOAuthSourceConnectionRequest : OAuth Source Serializer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserOAuthSourceConnectionRequest {
    #[serde(rename = "identifier")]
    pub identifier: String,
    #[serde(
        rename = "access_token",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub access_token: Option<Option<String>>,
}

impl UserOAuthSourceConnectionRequest {
    /// OAuth Source Serializer
    pub fn new(identifier: String) -> UserOAuthSourceConnectionRequest {
        UserOAuthSourceConnectionRequest {
            identifier,
            access_token: None,
        }
    }
}
